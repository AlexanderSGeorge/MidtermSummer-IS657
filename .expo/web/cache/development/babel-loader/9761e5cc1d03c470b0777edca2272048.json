{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexg\\\\node-demo\\\\calculation.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./style\";\nexport default function calculation() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstnumber = _useState4[0],\n      setFirstNumber = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondnumber = _useState6[0],\n      setSecondNumber = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addednumber = _useState8[0],\n      addNumber = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      subtractednumber = _useState10[0],\n      subtractNumber = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      multipliednumber = _useState12[0],\n      multiplyNumber = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dividednumber = _useState14[0],\n      divideNumber = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      seriesnumber = _useState16[0],\n      arrayNumber = _useState16[1];\n\n  function reduceFunc(firstnumber, secondnumber) {\n    var array = [];\n\n    for (var i = Number(firstnumber); i <= Number(secondnumber); i++) {\n      console.log(firstnumber);\n      console.log(secondnumber);\n      array.push(i);\n    }\n\n    ;\n    var summation = array.reduce(function (acc, value) {\n      return acc + value;\n    }, 0);\n    console.log(array);\n    console.log(summation);\n    return summation;\n  }\n\n  function calculate() {\n    addNumber(Number(firstnumber) + Number(secondnumber));\n    subtractNumber(Number(firstnumber) - Number(secondnumber));\n    multiplyNumber(Number(firstnumber) * Number(secondnumber));\n    divideNumber(Number(firstnumber) / Number(secondnumber));\n    arrayNumber(reduceFunc(firstnumber, secondnumber));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \" Enter Name: \"), React.createElement(TextInput, {\n    multiline: true,\n    style: styles.textInput,\n    placeholder: \"e.g. John Doe\",\n    onChangeText: function onChangeText(val) {\n      return setName(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Enter your first number: \"), React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    placeholder: \"e.g. 10\",\n    onChangeText: function onChangeText(val) {\n      return setFirstNumber(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Enter your second number: \"), React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    placeholder: \"e.g. 10\",\n    onChangeText: function onChangeText(val) {\n      return setSecondNumber(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"name: \", name, \", your first input : \", firstnumber, \", your second input : \", secondnumber), React.createElement(Button, {\n    title: \"Calculate\",\n    onPress: calculate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Addition: \", addednumber), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Subtraction: \", subtractednumber), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Multiplication: \", multipliednumber), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Division: \", dividednumber), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Series: \", seriesnumber)));\n}","map":{"version":3,"sources":["C:/Users/alexg/node-demo/calculation.js"],"names":["React","useState","styles","calculation","name","setName","firstnumber","setFirstNumber","secondnumber","setSecondNumber","addednumber","addNumber","subtractednumber","subtractNumber","multipliednumber","multiplyNumber","dividednumber","divideNumber","seriesnumber","arrayNumber","reduceFunc","array","i","Number","console","log","push","summation","reduce","acc","value","calculate","textStyle","textInput","val"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { View, Text, TextInput, Button } from 'react-native'\r\nimport styles from './style'\r\n//import Column from './column'\r\n\r\nexport default function calculation() {\r\n\r\n  const [name, setName] = useState(null)\r\n  const [firstnumber, setFirstNumber] = useState(0)\r\n  const [secondnumber, setSecondNumber] = useState(0)\r\n  const [addednumber, addNumber] = useState(0)\r\n  const [subtractednumber, subtractNumber] = useState(0)\r\n  const [multipliednumber, multiplyNumber] = useState(0)\r\n  const [dividednumber, divideNumber] = useState(0)\r\n  const [seriesnumber, arrayNumber] = useState(0)\r\n\r\n  function reduceFunc(firstnumber, secondnumber){\r\n    let array = [];\r\n\r\n\r\n    for (let i = Number(firstnumber); i <= Number(secondnumber); i++){\r\n      console.log(firstnumber);\r\n      console.log(secondnumber);\r\n      array.push(i)\r\n    };\r\n\r\n    const summation = array.reduce((acc, value) => acc + value, 0);\r\n    console.log(array);\r\n    console.log(summation);\r\n    return summation;\r\n  }\r\n\r\n \r\n  function calculate(){\r\n    addNumber( Number(firstnumber) + Number(secondnumber));\r\n    subtractNumber( Number(firstnumber) - Number(secondnumber));\r\n    multiplyNumber( Number(firstnumber) * Number(secondnumber));\r\n    divideNumber( Number(firstnumber) / Number(secondnumber));\r\n    arrayNumber(reduceFunc(firstnumber, secondnumber))\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Text style = {styles.textStyle}> Enter Name: </Text>\r\n      <TextInput\r\n        multiline \r\n        style = {styles.textInput}\r\n        placeholder='e.g. John Doe'\r\n        onChangeText={(val) => setName(val)}\r\n      />\r\n      <Text style = {styles.textStyle}>Enter your first number: </Text>\r\n      <TextInput\r\n        keyboardType=\"numeric\"\r\n        style = {styles.textInput}\r\n        placeholder='e.g. 10'\r\n        onChangeText={(val) => setFirstNumber(val)}\r\n      />\r\n      <Text style = {styles.textStyle}>Enter your second number: </Text>\r\n      <TextInput\r\n        keyboardType=\"numeric\"\r\n        style = {styles.textInput}\r\n        placeholder='e.g. 10'\r\n        onChangeText={(val) => setSecondNumber(val)}\r\n      />\r\n      <Text style = {styles.textStyle}>name: {name}, your first input : {firstnumber}, your second input : {secondnumber}</Text>\r\n      <Button \r\n        title=\"Calculate\"\r\n        onPress = {calculate}  \r\n      />\r\n      <Column>\r\n        <Text style = {styles.textStyle}>Addition: {addednumber}</Text>\r\n        <Text style = {styles.textStyle}>Subtraction: {subtractednumber}</Text>\r\n        <Text style = {styles.textStyle}>Multiplication: {multipliednumber}</Text>\r\n        <Text style = {styles.textStyle}>Division: {dividednumber}</Text>\r\n        <Text style = {styles.textStyle}>Series: {seriesnumber}</Text>\r\n      </Column>\r\n    </View>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}